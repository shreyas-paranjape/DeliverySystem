#%RAML 0.8

title: Food amigo API
version: "0.1"
baseUri: "https://api.foodamigo.co.in/{version}"
mediaType: "application/json"

securitySchemes:
securedBy:

# Product category
/product_category
  get:
    description: |
      Return product categories.
    body:
      application/json:
        schema: |
        example: |
          {
            "fetchSubcategories": "true/false" // Default true
            "fetchProducts": "true/false" // Default false
          }
    responses:
      200:
        body:
          schema: |
          example: |
            [
              {
                "name": "",
                "subCategories":
                  [
                    {
                      // Product Category object
                    }
                  ],
                "products":
                  [
                    {
                      // Product object
                    }
                  ]
              }
            ]
  post:
    description: |
      creates a new product category
    body:
      application/json:
        schema: |
        example: |
          {
            "name": "",
            "parent" "parent category id"
          }

  /{product_category_id}
    get:
      body:
        schema: |
        example: |
          application/json:
            {
              "fetchSubcategories": "true/false" // Default true
              "fetchProducts": "true/false" // Default false
            }
      responses:
        200:
          body:
            schema: |
            example: |
              {
                // Product Category Object
              }
    put:
      body:
        application/json:
          schema: |
          example: |
            {
              "parent_category_id": ""
            }

# Product
/product
  get:
    description: "Get all products from the system"
    query:
      body:
        application/json:
          description: Product fetch query
          example:
            {
              "count": "Number of rows to return",
              "start_id": "Product ID to start at",
              "category":
                {
                  "product_category_id": "ID of parent category",
                  "include_sub_categories": "true/false"
                },
              "party":
                {
                  "party_id": ""
                }
            }

  post:
    description: "Creates a new product in the system"
    body:
      application/json:
        schema: |
        example: |
          {
            "name": "",
            "description": "",
            "product_category_id": "",
            "parties":
              [
                {
                  "party_id": "",
                  "description": "",
                  "price": "",
                  "preparation_time": "",
                  "image_url": ""
                }
              ]
          }


  /{product_id}
   get:
     description: "Gets details of a product"
     responses:
       200:
         body:
           schema: |
           example: |
             {
              // product object
             }
   put:
     description: "Update a product record"
     body:
       application/json:
         schema: |
         example: |
          {
            // product object
          }

# Party
/party
  get:
    description: |
      Returns Customers/Vendors in the system.
    body:
      application/json:
        schema: |
        example: |
          {
            "role": "Customer/Vendor/All" // Default All
            "count": "",
            "start_id": "",
            "area": "",
            "products":
              [
                // Product ID's for which to get corresponding suppliers
              ],
            "include_sites": "true/false" // Default false
          }
    responses:
      200:
        body:
          schema: |
          example: |
            [
              {
                // party object
              }
            ]

  post:
    description: |
      Creates a new Customer/Vendor in the system.
    body:
      application/json:
        description: "Party Object"
        schema: |
        example: |
            {
              "name": "",
              "role" : "customer|vendor",
              "description": "",
              "image_url": "",
              "address":
                [
                  {
                    "name": "",
                    "address_string": "",
                    "latitude": "",
                    "longitude": ""
                  }
                ]
              "comm":
                [
                  {
                    "name": "",
                    "email": "",
                    "mobile": ""
                  }
                ]   
              "sites":
                [
                  {
                    "name": "",
                    "address":
                      {
                        "address_string": "",
                        "latitude": "",
                        "longitude": ""
                      }
                    "comm":
                      {
                        "name":"",
                        "email": "",
                        "mobile":""
                      }
                  }
                ]
            }

  /{party_id}
    get:
      description: Get details
      responses:
        200:
          body:
            schema: |
            example: |
              // Party object

    put:
      description: Update details
      body:
        application/json: |
          // Party object

# Order
/order
  get:

  post:
    description: |
      creates a new order
    body:
      application/json:
        description: "order object"
        schema: |
        example: |
          {
            party_id: 4,
            orders:
            [
              {
                product_id: 1,
                party_id: 1,
                quantity: 1,
                price: 213.21
              },
              {
                product_id: 2,
                party_id: 3,
                quantity: 3,
                price: 434.3
              }
            ]
          }


  /{order_id}
    get:

    put:

    delete:


# Shipment
/shipment
  get:

  post:

  /{shipment_id}

    get:

    put:

    delete:
